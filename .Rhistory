}
simulations_profit <- simulations_profit + current_profit
}
profit_simu <- simulations_profit/10000
print(paste0("Mean net profit - ", round(profit_simu,2)))
stock_price <- function(n = 30, v0 = 100)
{ log_returns <- rnorm(n = n - 1, mean = 0, sd = 0.1)
log_price <- cumsum(c(log(v0), log_returns))
price <- exp(log_price)
return(price)
}
mean_profit <- 0
buying_price <- 100
simulations_profit <- 0
current_profit <- 0
sell_below_90 <- 90
sell_above_120 <- 120
for(m in 1:10000){
stock <- stock_price()
for (stock_cost in stock[1:30]) {
if (stock_cost <= 90 || stock_cost >= 120){
current_profit <- stock_cost - buying_price
break
}
}
simulations_profit <- simulations_profit + current_profit
}
print(paste0("Mean net profit - ", round(simulations_profit,2)))
mean_profit <- 0
buying_price <- 100
simulations_profit <- 0
current_profit <- 0
sell_below_90 <- 90
sell_above_120 <- 120
for(m in 1:10000){
stock <- stock_price()
for (stock_cost in stock[1:30]) {
if (stock_cost <= 90 || stock_cost >= 120){
current_profit <- stock_cost - buying_price
break
}
}
simulations_profit <- simulations_profit + current_profit
}
print(paste0("Net Profit is - ", round(simulations_profit,2)))
mean_profit <- 0
buying_price <- 100
simulations_profit <- 0
current_profit <- 0
sell_below_90 <- 90
sell_above_120 <- 120
for(m in 1:10000){
stock <- stock_price()
for (stock_cost in stock[1:30]) {
if (stock_cost <= 90 || stock_cost >= 120){
current_profit <- stock_cost - buying_price
break
}
}
simulations_profit <- simulations_profit + current_profit
}
print(paste0("Net Profit is - ", round(simulations_profit,2)))
mean_profit <- 0
buying_price <- 100
simulations_profit <- 0
current_profit <- 0
sell_below_90 <- 90
sell_above_120 <- 120
for(m in 1:10000){
stock <- stock_price()
for (stock_cost in stock[1:30]) {
if (stock_cost <= 90 || stock_cost >= 120 || stock_cost == 30){
current_profit <- stock_cost - buying_price
break
}
}
simulations_profit <- simulations_profit + current_profit
}
print(paste0("Net Profit is - ", round(simulations_profit,2)))
mean_profit <- 0
buying_price <- 100
simulations_profit <- 0
current_profit <- 0
sell_below_90 <- 90
sell_above_120 <- 120
for(m in 1:10000){
stock <- stock_price()
for (stock_cost in stock[1:30]) {
if (stock_cost <= 90 || stock_cost >= 120 || stock_cost == 30){
current_profit <- stock_cost - buying_price
break
}
}
simulations_profit <- simulations_profit + current_profit
}
print(paste0("Net Profit is $", round(simulations_profit,2)))
mean_profit <- 0
buying_price <- 100
simulations_profit <- 0
current_profit <- 0
sell_below_90 <- 90
sell_above_120 <- 120
for(m in 1:10000){
stock <- stock_price()
for (stock_cost in stock[1:30]) {
if (stock_cost <= 90 || stock_cost >= 120 || stock_cost == 30){
current_profit <- stock_cost - buying_price
break
}
}
simulations_profit <- simulations_profit + current_profit
}
print(paste0("Net Profit is $", round(simulations_profit,2), "which is average + $2 in every iteration"))
mean_profit <- 0
buying_price <- 100
simulations_profit <- 0
current_profit <- 0
sell_below_90 <- 90
sell_above_120 <- 120
for(m in 1:10000){
stock <- stock_price()
for (stock_cost in stock[1:30]) {
if (stock_cost <= 90 || stock_cost >= 120 || stock_cost == 30){
current_profit <- stock_cost - buying_price
break
}
}
simulations_profit <- simulations_profit + current_profit
}
print(paste0("Net Profit is $", round(simulations_profit,2), "which is average + $2.26 in every iteration"))
dice <- function (m) {
rolling_three_dice <-  matrix(sample(1:6, 3*m, replace = TRUE), nrow = 3, ncol = m)
sum_of_dice <-  colSums(rolling_three_dice)
mean(sum_of_dice == 9)
}
dice(100000)
dice <- function (m) {
rolling_three_dice <-  matrix(sample(1:6, 3*m, replace = TRUE), nrow = 3, ncol = m)
sum_of_dice <-  colSums(rolling_three_dice)
mean(sum_of_dice == 9)
mean(sum_of_dice == 10)
}
dice(100000)
dice <- function (m) {
rolling_three_dice <-  matrix(sample(1:6, 3*m, replace = TRUE), nrow = 3, ncol = m)
sum_of_dice <-  colSums(rolling_three_dice)
print(mean(sum_of_dice == 9))
print(mean(sum_of_dice == 10))
}
dice(100000)
stock_price <- function(n = 30, v0 = 100)
{ log_returns <- rnorm(n = n - 1, mean = 0, sd = 0.1)
log_price <- cumsum(c(log(v0), log_returns))
price <- exp(log_price)
return(price)
}
stock_120_atleast_once <- 0
for (m in  1:10000) {
if (max(stock_price()) >= 120) {
stock_120_atleast_once <- stock_120_atleast_once + 1
}
}
stock_120_atleast_once / 10000
win_racquetball <- function() {
i_serve <- TRUE
my_points <- 0
opponent_points <- 0
while (my_points<21 && opponent_points<21) {
if (i_serve==TRUE) {
winner <- sample(c("i_score", "opponent_scores"), 1, prob = c(0.6, 0.4))
if (winner == "i_score") {
my_points = my_points + 1
i_serve <- TRUE
} else {
i_serve <- FALSE
}
}else {
winner <- sample(c("i_score", "opponent_scores"), 1, prob = c(0.5, 0.5))
if(winner == "opponent_scores") {
opponent_points = opponent_points + 1
i_serve <- FALSE
}
else {
i_serve <- TRUE
}
}
}
return(my_points==21)
}
win_racquetball()
n_win <- 0; n <- 10000;
for (i in 1:n) {if (win_racquetball()) n_win <- n_win + 1}
n_win / n
stock_price <- function(n = 30, v0 = 100)
{ log_returns <- rnorm(n = n - 1, mean = 0, sd = 0.1)
log_price <- cumsum(c(log(v0), log_returns))
price <- exp(log_price)
return(price)
}
# a) Estimate the probability that, at the end of 30 days, the stock price is $120 or higher.
stock_ended_120 <- 0
for (m in 1:10000) {
stock <- stock_price()
if(stock[30] >= 120) {
stock_ended_120 <- stock_ended_120 + 1
}
}
(stock_ended_120/ (10000)) ## ~.36 probablity that at the end of 30 days, the stock will be $120 or higher
stock_ended_120_atleast_once <- 0
for(m in 1:10000){
stock <- stock_price()
for (i in 1:30) {
if (stock[i] >= 120){
stock_ended_120_atleast_once <- stock_ended_120_atleast_once + 1
}
}
}
(probablity <- stock_ended_120_atleast_once/(10000*30)) ## ~.27 probability that stock price will close at 120 or higher atleast once
#### 3b ########## used the max function and got ~ .64 probability that stock price will close at 120 or higher
stock_120_atleast_once <- 0
for (m in  1:10000) {
if (max(stock_price()) >= 120) {
stock_120_atleast_once <- stock_120_atleast_once + 1
}
}
stock_120_atleast_once / 10000
stock_profit<-0
i<-0
for(m in 1:10000)
{
stock<-stock_price()
for(j in 1:30)
{
if(stock[j]>=120)
{
date<-j
break
}
else if (stock[j]<=90)
{
date<-j
break
}
else if(j==30)
{
date<-30
}
}
if(stock[date]>100)
{
stock_profit<-stock_profit+1
}
}
stock_profit/10000
stock_loss<-0
i<-0
for(m in 1:10000)
{
stock<-stock_price()
for(j in 1:30)
{
if(stock[j]>=120)
{
date<-j
break
}
else if (stock[j]<=90)
{
date<-j
break
}
else if(j==30)
{
date<-30
}
}
if(stock[date]<100)
{
stock_loss<-stock_loss+1
}
}
stock_loss/10000
stock_end30<-0
i<-0
for(m in 1:10000)
{
stock<-stock_price()
for(j in 1:30)
{
if(stock[j]>=120)
{
date<-j
break
}
else if (stock[j]<=90)
{
date<-j
break
}
else if(j==30)
{
date<-30
stock_end30<-stock_end30+1
}
}
}
stock_end30/10000
mean_profit <- 0
buying_price <- 100
simulations_profit <- 0
current_profit <- 0
sell_below_90 <- 90
sell_above_120 <- 120
for(m in 1:10000){
stock <- stock_price()
for (stock_cost in stock[1:30]) {
if (stock_cost <= 90 || stock_cost >= 120 || stock_cost == 30){
current_profit <- stock_cost - buying_price
break
}
}
simulations_profit <- simulations_profit + current_profit
}
print(paste0("Net Profit is $", round(simulations_profit,2), " which is average + $2.26 in every iteration"))
mean_profit <- 0
buying_price <- 100
simulations_profit <- 0
current_profit <- 0
sell_below_90 <- 90
sell_above_120 <- 120
for(m in 1:10000){
stock <- stock_price()
for (stock_cost in stock[1:30]) {
if (stock_cost <= 90 || stock_cost >= 120 || stock_cost == 30){
current_profit <- stock_cost - buying_price
break
}
}
simulations_profit <- simulations_profit + current_profit
}
simulations_profit/10000
print(paste0("Net Profit is $", round(simulations_profit,2), " which is ~ + $2.26 in every iteration"))
# mean net profit
simulations_profit/10000
print(paste0("Net Profit is $", round(simulations_profit,2), " which is ~ + $2.26 in every iteration"))
# mean net profit
simulations_profit/10000
# mean net profit
simulations_profit/10000
mean_profit <- 0
buying_price <- 100
simulations_profit <- 0
current_profit <- 0
sell_below_90 <- 90
sell_above_120 <- 120
for(m in 1:10000){
stock <- stock_price()
for (stock_cost in stock[1:30]) {
if (stock_cost <= 90 || stock_cost >= 120 || stock_cost == 30){
current_profit <- stock_cost - buying_price
break
}
}
simulations_profit <- simulations_profit + current_profit
}
# mean net profit
simulations_profit/10000
print(paste0("Net Profit is $", round(simulations_profit,2), " which is ~ + $2.26 in every iteration"))
mean_profit <- 0
buying_price <- 100
simulations_profit <- 0
current_profit <- 0
sell_below_90 <- 90
sell_above_120 <- 120
for(m in 1:10000){
stock <- stock_price()
for (stock_cost in stock[1:30]) {
if (stock_cost <= 90 || stock_cost >= 120 || stock_cost == 30){
current_profit <- stock_cost - buying_price
break
}
}
simulations_profit <- simulations_profit + current_profit
}
# mean net profit
simulations_profit/10000
print(paste0("Net Profit is $", round(simulations_profit,2), " which is ~ + $2.26 in every iteration"))
mean_profit <- 0
buying_price <- 100
simulations_profit <- 0
current_profit <- 0
sell_below_90 <- 90
sell_above_120 <- 120
for(m in 1:10000){
stock <- stock_price()
for (stock_cost in stock[1:30]) {
if (stock_cost <= 90 || stock_cost >= 120 || stock_cost == 30){
current_profit <- stock_cost - buying_price
break
}
}
simulations_profit <- simulations_profit + current_profit
}
# mean net profit
simulations_profit/10000
print(paste0("Net Profit is $", round(simulations_profit,2), " which is ~ + $2.26 in every iteration"))
mean_profit <- 0
buying_price <- 100
simulations_profit <- 0
current_profit <- 0
sell_below_90 <- 90
sell_above_120 <- 120
for(m in 1:10000){
stock <- stock_price()
for (stock_cost in stock[1:30]) {
if (stock_cost <= 90 || stock_cost >= 120 || stock_cost == 30){
current_profit <- stock_cost - buying_price
break
}
}
simulations_profit <- simulations_profit + current_profit
}
# mean net profit
simulations_profit/10000
print(paste0("Net Profit is $", round(simulations_profit,2), " which is ~ + $2.26 in every iteration"))
mean_profit <- 0
buying_price <- 100
simulations_profit <- 0
current_profit <- 0
sell_below_90 <- 90
sell_above_120 <- 120
for(m in 1:10000){
stock <- stock_price()
for (stock_cost in stock[1:30]) {
if (stock_cost <= 90 || stock_cost >= 120 || stock_cost == 30){
current_profit <- stock_cost - buying_price
break
}
}
simulations_profit <- simulations_profit + current_profit
}
# mean net profit
simulations_profit/10000
print(paste0("Net Profit is $", round(simulations_profit,2), " which is ~ + $2.26 in every iteration"))
mean_profit <- 0
buying_price <- 100
simulations_profit <- 0
current_profit <- 0
sell_below_90 <- 90
sell_above_120 <- 120
for(m in 1:10000){
stock <- stock_price()
for (stock_cost in stock[1:30]) {
if (stock_cost <= 90 || stock_cost >= 120 || stock_cost == 30){
current_profit <- stock_cost - buying_price
break
}
}
simulations_profit <- simulations_profit + current_profit
}
# mean net profit
simulations_profit/10000
print(paste0("Net Profit is $", round(simulations_profit,2), " which is ~ + $2.26 in every iteration"))
mean_profit <- 0
buying_price <- 100
simulations_profit <- 0
current_profit <- 0
sell_below_90 <- 90
sell_above_120 <- 120
for(m in 1:10000){
stock <- stock_price()
for (stock_cost in stock[1:30]) {
if (stock_cost <= 90 || stock_cost >= 120 || stock_cost == 30){
current_profit <- stock_cost - buying_price
break
}
}
simulations_profit <- simulations_profit + current_profit
}
# mean net profit
simulations_profit/10000
print(paste0("Net Profit is $", round(simulations_profit,2), " which is ~ + $2.26 in every iteration"))
mean_profit <- 0
buying_price <- 100
simulations_profit <- 0
current_profit <- 0
sell_below_90 <- 90
sell_above_120 <- 120
for(m in 1:10000){
stock <- stock_price()
for (stock_cost in stock[1:30]) {
if (stock_cost <= 90 || stock_cost >= 120 || stock_cost == 30){
current_profit <- stock_cost - buying_price
break
}
}
simulations_profit <- simulations_profit + current_profit
}
# mean net profit
simulations_profit/10000
print(paste0("Net Profit is $", round(simulations_profit,2), " which is ~ + $2.26 in every iteration"))
library(readr)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(stringr)
setwd("~/Documents/Github/UberDataAnalysis")
imdb <- read.csv("IMDM_ratings.csv")
str(imdb)
install.packages("ISLR")
ibrary(ISLR)
library(ISLR)
